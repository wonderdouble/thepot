{"version":3,"sources":["../../src/contact/contact.js"],"names":["makeContact","contactInfo","validContact","validate","normalContact","normalize","Object","freeze","name","topic","comment","otherInfo","validateName","label","length","InvalidPropertyError","validateEmail","email","replace"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,WAAT,CACXC,WAAW,GAAG,4BAAc,aAAd,CADH,EAEd;AAEG,QAAMC,YAAY,GAAGC,QAAQ,CAACF,WAAD,CAA7B;AACA,QAAMG,aAAa,GAAGC,SAAS,CAACH,YAAD,CAA/B;AACA,SAAOI,MAAM,CAACC,MAAP,CAAcH,aAAd,CAAP;;AAGA,WAASD,QAAT,CAAmB;AACfK,IAAAA,IAAI,GAAG,4BAAc,MAAd,CADQ;AAEf;AACA;AACAC,IAAAA,KAAK,GAAG,4BAAc,OAAd,CAJO;AAKfC,IAAAA,OAAO,GAAG,4BAAc,SAAd,CALK;AAMf,OAAGC;AANY,MAOf,EAPJ,EAOQ;AACJC,IAAAA,YAAY,CAAC,MAAD,EAASJ,IAAT,CAAZ;AACAI,IAAAA,YAAY,CAAC,OAAD,EAAUH,KAAV,CAAZ;AACAG,IAAAA,YAAY,CAAC,SAAD,EAAYF,OAAZ,CAAZ,CAHI,CAIJ;;AACA,WAAO;AAAEF,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwB,SAAGC;AAA3B,KAAP;AACH;;AAED,WAASC,YAAT,CAAuBC,KAAvB,EAA8BL,IAA9B,EAAoC;AAChC,QAAIA,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqB;AACjB,YAAM,IAAIC,4BAAJ,CACL,WAAUF,KAAM,sCADX,CAAN;AAGH;AACJ;;AAED,WAASG,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,QAAI,CAAC,2BAAaA,KAAb,CAAL,EAA0B;AACtB,YAAM,IAAIF,4BAAJ,CAAyB,gCAAzB,CAAN;AACH;AACJ;;AAED,WAASV,SAAT,CAAoB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwB,OAAGC;AAA3B,GAApB,EAA4D;AACxD,WAAO,EACH,GAAGA,SADA;AAEHH,MAAAA,IAAI,EAAE,yBAAWA,IAAX,CAFH;AAGHC,MAAAA,KAAK,EAAE,yBAAWA,KAAX,CAHJ;AAIHC,MAAAA,OAAO,EAAEA,OAAO,CAACQ,OAAR,CAAgB,iBAAhB,EAAmC,MAAnC;AAJN,KAAP;AAMH;AAEJ","sourcesContent":["import requiredParam from '../helpers/required-param';\nimport { InvalidPropertyError } from '../helpers/errors';\nimport isValidEmail from '../helpers/is-valid-email.js';\nimport upperFirst from '../helpers/upper-first';\n\nexport default function makeContact(\n    contactInfo = requiredParam('contactInfo')\n){\n    \n    const validContact = validate(contactInfo);\n    const normalContact = normalize(validContact);\n    return Object.freeze(normalContact);\n\n   \n    function validate ({\n        name = requiredParam('name'),\n        //email = requiredParam('email'),\n        //phone = requiredParam('phone'),\n        topic = requiredParam('topic'),\n        comment = requiredParam('comment'),\n        ...otherInfo\n    } = {}) {\n        validateName('name', name);\n        validateName('topic', topic);\n        validateName('comment', comment);\n        //validateEmail(email);\n        return { name, topic, comment, ...otherInfo }\n    }\n\n    function validateName (label, name) {\n        if (name.length < 2) {\n            throw new InvalidPropertyError(\n            `Contact ${label} must be at least 2 characters long.`\n            )\n        }\n    }\n\n    function validateEmail(email){\n        if (!isValidEmail(email)) {\n            throw new InvalidPropertyError('Invalid contact email address.')\n        }\n    }\n\n    function normalize ({ name, topic, comment, ...otherInfo }) {\n        return {\n            ...otherInfo,\n            name: upperFirst(name),\n            topic: upperFirst(topic),\n            comment: comment.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')\n        }\n    }\n    \n}\n"],"file":"contact.js"}