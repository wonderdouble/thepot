{"version":3,"sources":["../../src/archive/archive-endpoint.js"],"names":["makeArchiveEndpointHandler","archiveQuery","handle","httpRequest","method","postArchive","getArchive","deleteArchive","updateArchive","statusCode","errorMessage","id","queryParams","title","email","max","before","after","undefined","result","findByTitle","headers","data","JSON","stringify","findByEmail","findById","archiveInfo","body","parse","archive","add","e","message","UniqueConstraintError","InvalidPropertyError","RequiredParameterError","update","deleteById"],"mappings":";;;;;;;AAAA;;AAKE;;AACA;;;;AAEa,SAASA,0BAAT,CAAoC;AAACC,EAAAA;AAAD,CAApC,EAAmD;AAC9D,SAAO,eAAeC,MAAf,CAAsBC,WAAtB,EAAkC;AACrC,YAAQA,WAAW,CAACC,MAApB;AACI,WAAK,MAAL;AACE,eAAOC,WAAW,CAACF,WAAD,CAAlB;;AAEF,WAAK,KAAL;AACE,eAAOG,UAAU,CAACH,WAAD,CAAjB;;AAEF,WAAK,QAAL;AACE,eAAOI,aAAa,CAACJ,WAAD,CAApB;;AAEF,WAAK,KAAL;AACE,eAAOK,aAAa,CAACL,WAAD,CAApB;;AAEF;AACE,eAAO,wBAAc;AACnBM,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAG,GAAEP,WAAW,CAACC,MAAO;AAFjB,SAAd,CAAP;AAdN;AAmBH,GApBD;;AAsBA,iBAAeE,UAAf,CAA2BH,WAA3B,EAAwC;AACtC,UAAM;AAAEQ,MAAAA;AAAF,QAASR,WAAW,CAACS,WAAZ,IAA2B,EAA1C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAYV,WAAW,CAACS,WAAZ,IAA2B,EAA7C;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAYX,WAAW,CAACS,WAAZ,IAA2B,EAA7C;AACA,UAAM;AAAEG,MAAAA,GAAF;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,QAAyBd,WAAW,CAACS,WAAZ,IAA2B,EAA1D;;AAEA,QAAIC,KAAK,KAAKK,SAAd,EAAwB;AACtB,YAAMC,MAAM,GAAG,MAAMlB,YAAY,CAACmB,WAAb,CAAyB;AAAEP,QAAAA;AAAF,OAAzB,CAArB;AAEA,aAAO;AACLQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAQD,KAXD,MAYK,IAAIL,KAAK,KAAKI,SAAd,EAAyB;AAC5B,YAAMC,MAAM,GAAG,MAAMlB,YAAY,CAACwB,WAAb,CAAyB;AAAEX,QAAAA;AAAF,OAAzB,CAArB;AAEA,aAAO;AACLO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAQD,KAXI,MAYA,IAAIR,EAAE,KAAKO,SAAX,EAAsB;AACzB,YAAMC,MAAM,GAAG,MAAMlB,YAAY,CAACyB,QAAb,CAAsB;AAAEf,QAAAA;AAAF,OAAtB,CAArB;AAEA,aAAO;AACLU,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAQD,KAXI,MAYA;AACH,YAAMA,MAAM,GAAG,MAAMlB,YAAY,CAACK,UAAb,CAAwB;AAAES,QAAAA,GAAF;AAAOC,QAAAA,MAAP;AAAeC,QAAAA;AAAf,OAAxB,CAArB;AAEA,aAAO;AACLI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAQD;AAEF;;AAED,iBAAed,WAAf,CAA4BF,WAA5B,EAAyC;AACrC,QAAIwB,WAAW,GAAGxB,WAAW,CAACyB,IAA9B;;AACA,QAAI,CAACD,WAAL,EAAkB;AAChB,aAAO,wBAAc;AACnBlB,QAAAA,UAAU,EAAE,GADO;AAEnBC,QAAAA,YAAY,EAAE;AAFK,OAAd,CAAP;AAID;;AAED,QAAI,OAAOP,WAAW,CAACyB,IAAnB,KAA4B,QAAhC,EAA0C;AACxC,UAAI;AACFD,QAAAA,WAAW,GAAGJ,IAAI,CAACM,KAAL,CAAWF,WAAX,CAAd;AACD,OAFD,CAEE,MAAM;AACN,eAAO,wBAAc;AACnBlB,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAE;AAFK,SAAd,CAAP;AAID;AACF;;AAED,QAAI;AACF,YAAMoB,OAAO,GAAG,sBAAYH,WAAZ,CAAhB;AACA,YAAMR,MAAM,GAAG,MAAMlB,YAAY,CAAC8B,GAAb,CAAiBD,OAAjB,CAArB;AACA,aAAO;AACLT,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAOD,KAVD,CAUE,OAAOa,CAAP,EAAU;AACV,aAAO,wBAAc;AACnBtB,QAAAA,YAAY,EAAEsB,CAAC,CAACC,OADG;AAEnBxB,QAAAA,UAAU,EACRuB,CAAC,YAAYE,6BAAb,GACI,GADJ,GAEIF,CAAC,YAAYG,4BAAb,IACAH,CAAC,YAAYI,8BADb,GAEE,GAFF,GAGE;AARW,OAAd,CAAP;AAUD;AACJ;;AAED,iBAAe5B,aAAf,CAA8BL,WAA9B,EAA2C;AAEzC,QAAIwB,WAAW,GAAGxB,WAAW,CAACyB,IAA9B;;AAEA,QAAI,CAACD,WAAL,EAAkB;AAChB,aAAO,wBAAc;AACnBlB,QAAAA,UAAU,EAAE,GADO;AAEnBC,QAAAA,YAAY,EAAE;AAFK,OAAd,CAAP;AAID;;AAED,QAAI,OAAOP,WAAW,CAACyB,IAAnB,KAA4B,QAAhC,EAA0C;AACxC,UAAI;AACFD,QAAAA,WAAW,GAAGJ,IAAI,CAACM,KAAL,CAAWF,WAAX,CAAd;AACD,OAFD,CAEE,MAAM;AACN,eAAO,wBAAc;AACnBlB,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAE;AAFK,SAAd,CAAP;AAID;AACF;;AAED,QAAI;AACF,YAAMoB,OAAO,GAAG,sBAAYH,WAAZ,CAAhB;AACA,YAAMR,MAAM,GAAG,MAAMlB,YAAY,CAACoC,MAAb,CAAoBP,OAApB,CAArB;AACA,aAAO;AACLT,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAOD,KAVD,CAUE,OAAOa,CAAP,EAAU;AACV,aAAO,wBAAc;AACnBtB,QAAAA,YAAY,EAAEsB,CAAC,CAACC,OADG;AAEnBxB,QAAAA,UAAU,EACRuB,CAAC,YAAYE,6BAAb,GACI,GADJ,GAEIF,CAAC,YAAYG,4BAAb,IACAH,CAAC,YAAYI,8BADb,GAEE,GAFF,GAGE;AARW,OAAd,CAAP;AAUD;AACF;;AAED,iBAAe7B,aAAf,CAA8BJ,WAA9B,EAA2C;AACzC,UAAM;AAAEQ,MAAAA;AAAF,QAASR,WAAW,CAACS,WAAZ,IAA2B,EAA1C;;AAEA,QAAI;AACF,YAAMO,MAAM,GAAG,MAAMlB,YAAY,CAACqC,UAAb,CAAwB;AAAE3B,QAAAA;AAAF,OAAxB,CAArB;AACA,aAAO;AACLU,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILZ,QAAAA,UAAU,EAAE,GAJP;AAKLa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALD,OAAP;AAOD,KATD,CAUA,OAAOa,CAAP,EAAS;AACP,aAAO,wBAAc;AACnBtB,QAAAA,YAAY,EAAEsB,CAAC,CAACC,OADG;AAEnBxB,QAAAA,UAAU,EACRuB,CAAC,YAAYE,6BAAb,GACI,GADJ,GAEIF,CAAC,YAAYG,4BAAb,IACAH,CAAC,YAAYI,8BADb,GAEE,GAFF,GAGE;AARW,OAAd,CAAP;AAWD;AAEF;AAEF","sourcesContent":["import {\n    UniqueConstraintError,\n    InvalidPropertyError,\n    RequiredParameterError\n  } from '../helpers/errors';\n  import makeHttpError from '../helpers/http-error';\n  import makeArchive from './archive';\n\nexport default function makeArchiveEndpointHandler({archiveQuery}){\n    return async function handle(httpRequest){\n        switch (httpRequest.method) {\n            case 'POST':\n              return postArchive(httpRequest)\n      \n            case 'GET':\n              return getArchive(httpRequest)\n\n            case 'DELETE':\n              return deleteArchive(httpRequest)\n\n            case 'PUT':\n              return updateArchive(httpRequest)\n      \n            default:\n              return makeHttpError({\n                statusCode: 405,\n                errorMessage: `${httpRequest.method} method not allowed.`\n              })\n        }\n    }\n\n    async function getArchive (httpRequest) {\n      const { id } = httpRequest.queryParams || {}\n      const { title } = httpRequest.queryParams || {} \n      const { email } = httpRequest.queryParams || {}\n      const { max, before, after } = httpRequest.queryParams || {}\n  \n      if (title !== undefined){\n        const result = await archiveQuery.findByTitle({ title })\n  \n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n  \n      }\n      else if (email !== undefined ){\n        const result = await archiveQuery.findByEmail({ email})\n  \n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        } \n  \n      }\n      else if (id !== undefined ){\n        const result = await archiveQuery.findById({ id })\n  \n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n  \n      }\n      else {\n        const result = await archiveQuery.getArchive({ max, before, after })\n  \n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n        \n      }\n        \n    }\n\n    async function postArchive (httpRequest) {\n        let archiveInfo = httpRequest.body\n        if (!archiveInfo) {\n          return makeHttpError({\n            statusCode: 400,\n            errorMessage: 'Bad request. No POST body.'\n          })\n        }\n    \n        if (typeof httpRequest.body === 'string') {\n          try {\n            archiveInfo = JSON.parse(archiveInfo)\n          } catch {\n            return makeHttpError({\n              statusCode: 400,\n              errorMessage: 'Bad request. POST body must be valid JSON.'\n            })\n          }\n        }\n    \n        try {\n          const archive = makeArchive(archiveInfo)\n          const result = await archiveQuery.add(archive)\n          return {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            statusCode: 201,\n            data: JSON.stringify(result)\n          }\n        } catch (e) {\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n        }\n    }\n\n    async function updateArchive (httpRequest) {\n    \n      let archiveInfo = httpRequest.body\n      \n      if (!archiveInfo) {\n        return makeHttpError({\n          statusCode: 400,\n          errorMessage: 'Bad request. No POST body.'\n        })\n      }\n  \n      if (typeof httpRequest.body === 'string') {\n        try {\n          archiveInfo = JSON.parse(archiveInfo)\n        } catch {\n          return makeHttpError({\n            statusCode: 400,\n            errorMessage: 'Bad request. POST body must be valid JSON.'\n          })\n        }\n      }\n  \n      try {\n        const archive = makeArchive(archiveInfo);\n        const result = await archiveQuery.update(archive)\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 201,\n          data: JSON.stringify(result)\n        }\n      } catch (e) {\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n      }\n    }\n  \n    async function deleteArchive (httpRequest) {\n      const { id } = httpRequest.queryParams || {}\n  \n      try {\n        const result = await archiveQuery.deleteById({ id })\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n      }\n      catch (e){\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n\n      }\n      \n    }\n  \n  }"],"file":"archive-endpoint.js"}