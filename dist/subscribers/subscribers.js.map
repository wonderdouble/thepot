{"version":3,"sources":["../../src/subscribers/subscribers.js"],"names":["makeSubscriber","subscriberInfo","validSubscriber","validate","normalSubscriber","normalize","Object","freeze","otherInfo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,cAAT,CACXC,cAAc,GAAG,4BAAc,gBAAd,CADN,EAEd;AAEG,QAAMC,eAAe,GAAGC,QAAQ,CAACF,cAAD,CAAhC;AACA,QAAMG,gBAAgB,GAAGC,SAAS,CAACH,eAAD,CAAlC;AACA,SAAOI,MAAM,CAACC,MAAP,CAAcH,gBAAd,CAAP;;AAGA,WAASD,QAAT,CAAmB,EACf;AACA;AACA;AACA;AACA;AACA,OAAGK;AANY,MAOb,EAPN,EAOU;AACN;AACA;AACA;AACA,WAAO,EAAE,GAAGA;AAAL,KAAP;AACD,GAnBN,CAqBK;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,WAASH,SAAT,CAAoB,EAAE,GAAGG;AAAL,GAApB,EAAsC;AACpC,WAAO,EACL,GAAGA;AADE,KAAP;AAGD;AACN","sourcesContent":["import requiredParam from '../helpers/required-param';\nimport { InvalidPropertyError } from '../helpers/errors';\nimport isValidEmail from '../helpers/is-valid-email.js';\nimport upperFirst from '../helpers/upper-first';\n\nexport default function makeSubscriber(\n    subscriberInfo = requiredParam('subscriberInfo')\n){\n    \n    const validSubscriber = validate(subscriberInfo);\n    const normalSubscriber = normalize(validSubscriber);\n    return Object.freeze(normalSubscriber);\n\n  \n    function validate ({\n        // estate_name = requiredParam('estate_name'),\n        // name = requiredParam('name'),\n        // email = requiredParam('email'),\n        // estate_id = requiredParam('estate_id'),\n        // phone = requiredParam('phone'),\n        ...otherInfo\n      } = {}) {\n        // validateName('estate_name', estate_name);\n        // validateName('name', name);\n        // validateEmail(email);\n        return { ...otherInfo }\n      }\n    \n      // function validateName (label, name) {\n      //   if (name.length < 2) {\n      //     throw new InvalidPropertyError(\n      //       `Subscriber's ${label} must be at least 2 characters long.`\n      //     )\n      //   }\n      // }\n\n      // function validateEmail(email){\n      //   if (!isValidEmail(email)) {\n      //       throw new InvalidPropertyError('Invalid contact email address.')\n      //   }\n      // }\n\n      function normalize ({ ...otherInfo }) {\n        return {\n          ...otherInfo\n        }\n      }\n}\n"],"file":"subscribers.js"}